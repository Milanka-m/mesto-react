{"version":3,"sources":["contexts/CurrentUserContext.js","contexts/CardsContext.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","CardsContext","Header","className","href","target","rel","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","alt","name","onClick","type","aria-label","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","onSubmit","isOpen","title","onClose","children","nameButton","popupOpened","noValidate","ImagePopup","src","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","Object","keys","e","preventDefault","value","onChange","id","placeholder","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","nameCard","setNameCard","linkCard","setLinkCard","api","address","token","groupID","this","_address","_token","_groupID","fetch","headers","authorization","then","response","ok","json","Promise","reject","status","data","method","body","JSON","stringify","resolve","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","currentCard","setCurrentCard","setCards","closeAllPopups","getCards","res","catch","err","console","log","getUsers","user","Provider","removeLikeCard","newCard","state","c","addLikeCard","removeCard","filter","editUser","userData","editAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9bc51fc.chunk.js","sourcesContent":["import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nexport const CardsContext = React.createContext();","import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a href=\"#\" className=\"header__logo link\" target=\"_self\" rel=\"noopener\"></a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react'; \r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete }) { \r\n  const currentUser = React.useContext(CurrentUserContext);\r\n \r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = `${isOwn && 'elements__icon-delete_active'}`; \r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `${isLiked && 'elements__icon-favorite_active'}`;\r\n\r\n  function handleClick() { \r\n    onCardClick(card); \r\n  }   \r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return ( \r\n    <article className=\"elements__card\"> \r\n      <div className=\"elements__card-image\" style={{ backgroundImage: `url(${card.link})` }} alt={card.name} onClick={handleClick}></div> \r\n      <button className={`elements__icon-delete ${cardDeleteButtonClassName} link`} type=\"button\" aria-label=\"Удалить карточку\" onClick={handleDeleteClick}>\r\n      </button> \r\n      <div className=\"elements__label\"> \r\n        <h2 className=\"elements__heading\">{card.name}</h2> \r\n        <ul className=\"elements__like\"> \r\n          <li><button className={`elements__icon-favorite ${cardLikeButtonClassName} link`} type=\"button\" aria-label=\"Поставить лайк\" onClick={handleLikeClick}></button></li> \r\n          <li><p className=\"elements__like-number\">{card.likes.length}</p></li> \r\n        </ul> \r\n      </div> \r\n    </article> \r\n  ) \r\n} \r\n \r\nexport default Card; ","import React from 'react'; \r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main({ cards, onCardLike, onCardDelete, onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__info\">\r\n          <button className=\"profile__button-avatar\" \r\n             onClick={onEditAvatar} type=\"button\" aria-label=\"Редактировать аватар\">\r\n            <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})`}}></div>\r\n          </button>\r\n          <div className=\"profile__description\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button className=\"profile__button-edit profile__icon-edit link\" \r\n              onClick={onEditProfile} type=\"button\" aria-label=\"Редактировать профиль\">\r\n            </button>\r\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n          <button className=\"profile__button-add profile__icon-add link\" \r\n            onClick={onAddPlace} type=\"button\" aria-label=\"Добавить данные\">\r\n          </button>\r\n      </section>\r\n      \r\n      <section className=\"elements\"> \r\n          {cards.map(card => { \r\n            return ( \r\n              <Card card={card}\r\n              key={card._id} \r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete}\r\n              onCardClick={onCardClick} /> \r\n            ) \r\n          })} \r\n      </section> \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Милана Бируля</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({ onSubmit, isOpen, name, title, onClose, children, nameButton }) {\r\n  const popupOpened = `${isOpen && 'popup_opened'}`;\r\n  return (\r\n    <div className={`popup ${popupOpened}`}>\r\n      <div className=\"popup__container\">\r\n        <button className=\"popup__close popup-profile-close link\" type=\"button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\r\n        <form className=\"popup__form popup-profile-form\" name={name} onSubmit={onSubmit} noValidate>\r\n          <div className=\"popup__form-container\">\r\n            <h2 className=\"popup__form-title\">{title}</h2> \r\n            {children}\r\n          </div>\r\n          <fieldset className=\"popup__form-handlers\">\r\n              <button type=\"submit\" className=\"popup__form-button link\">{nameButton}</button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({ isOpen, onClose, link, name }) {\r\n  const popupOpened = `${isOpen && 'popup_opened'}`;\r\n  \r\n  return (\r\n    <div className={`popup-image popup ${popupOpened}`}>\r\n      <div className=\"popup-image__container\">\r\n        <button className=\"popup__close popup-image-close link\" type=\"button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\r\n        <figure className=\"popup-image__figure\">\r\n          <img className=\"popup-image__illustration\" src={link} alt={name} />\r\n          <figcaption><p className=\"popup-image__caption\">{name}</p></figcaption>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup ({ onUpdateUser, isOpen, onClose }) {\r\n  // подписка на контекст CurrentUserContext\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // стейт переменные для управляемых компонентов \r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  // в форму вставяться текущие значения пользователя\r\n   React.useEffect(() => {\r\n    if(Object.keys(currentUser).length) {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n    }\r\n  }, [currentUser]); \r\n  \r\n\r\n  // Обработчик изменения инпута name, обновляет стейт\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  // Обработчик изменения инпута about, обновляет стейт\r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value);\r\n  } \r\n\r\n  // Обработчик отправки формы\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик через пропс\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} title=\"Редактировать профиль\" nameButton=\"Сохранить\" name=\"profile\">\r\n          <fieldset className=\"popup__form-input-container\">\r\n            <section className=\"popup__form-section\">\r\n              <input className=\"popup__form-input\" value={name} onChange={handleChangeName} type=\"text\" name=\"name\" id=\"name\" placeholder=\"Имя\" \r\n                minLength=\"2\" maxLength=\"40\" required />\r\n              <span className=\"popup__form-input-error\" id=\"name-error\"></span>\r\n            </section>\r\n            <section className=\"popup__form-section\">\r\n              <input className=\"popup__form-input\" value={description} onChange={handleChangeDescription} type=\"text\" name=\"about\" id=\"about\" placeholder=\"О себе\" \r\n               minLength=\"2\" maxLength=\"200\" required />\r\n              <span className=\"popup__form-input-error\" id=\"about-error\"></span>\r\n            </section>\r\n          </fieldset>\r\n      </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup ({ onUpdateAvatar, isOpen, onClose }) {\r\n  // реф для получения прямого доступа к полю link\r\n  const avatarRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if(isOpen) {\r\n      avatarRef.current.value = '';\r\n    }\r\n  }, [isOpen]); \r\n  \r\n\r\n  // Обработчик отправки формы\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значение рефа во внешний обработчик через пропс\r\n    onUpdateAvatar({\r\n      avatar: avatarRef.current.value\r\n    });\r\n  } \r\n  \r\n  return(\r\n    <PopupWithForm onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} title=\"Обновить аватар\" nameButton=\"Сохранить\" name=\"avatar\">\r\n      <fieldset className=\"popup__form-input-container\">\r\n        <section className=\"popup__form-section\">\r\n          <input ref={avatarRef} className=\"popup__form-input\" type=\"url\" name=\"link\" id=\"link\" placeholder=\"Ссылка на картинку\" required />\r\n          <span className=\"popup__form-input-error\" id=\"link-error\"></span>\r\n        </section>\r\n      </fieldset>\r\n    </PopupWithForm> \r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup ({ onAddPlace, isOpen, onClose }) {\r\n\r\n  // стейт переменные для управляемых компонентов \r\n  const [nameCard, setNameCard] = React.useState('');\r\n  const [linkCard, setLinkCard] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    if(isOpen) {\r\n      setNameCard('');\r\n      setLinkCard('');\r\n    }\r\n  }, [isOpen]); \r\n\r\n  // Обработчик изменения инпута namecard обновляет стейт\r\n  function handleChangeNameCard(e) {\r\n    setNameCard(e.target.value);\r\n  }\r\n\r\n  // Обработчик изменения инпута linkCard обновляет стейт\r\n  function handleChangeLinkCard(e) {\r\n    setLinkCard(e.target.value);\r\n  } \r\n\r\n  // Обработчик отправки формы\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onAddPlace({\r\n      name: nameCard,\r\n      link: linkCard\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} title=\"Новое место\" nameButton=\"Создать\" name=\"card\">\r\n      <fieldset className=\"popup__form-input-container\">\r\n        <section className=\"popup__form-section\">\r\n          <input className=\"popup__form-input\" type=\"text\" value={nameCard} onChange={handleChangeNameCard} name=\"namecard\" id=\"namecard\" placeholder=\"Название\" \r\n            minLength=\"2\" maxLength=\"30\" required />\r\n          <span className=\"popup__form-input-error\" id=\"namecard-error\"></span>\r\n        </section>\r\n        <section className=\"popup__form-section\">\r\n          <input className=\"popup__form-input\" type=\"url\" value={linkCard} onChange={handleChangeLinkCard} name=\"linkcard\" id=\"linkcard\" placeholder=\"Ссылка на картинку\" required />\r\n          <span className=\"popup__form-input-error\" id=\"linkcard-error\"></span>\r\n        </section>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","class Api {\r\n  constructor({ address, token, groupID }) {\r\n    this._address = address;\r\n    this._token = token;\r\n    this._groupID = groupID;\r\n  }\r\n\r\n  //публичный метод, который получает информацию о пользователе с сервера\r\n  getUsers() {\r\n    return fetch(`${this._address}/v1/${this._groupID}/users/me`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then((response) => {\r\n         if (response.ok) {\r\n         // если ответ сервера 200, возвращаются данные\r\n         return response.json();\r\n      }\r\n        // иначе возвращаем промис с ошибкой\r\n       return Promise.reject(`Ошибка ${response.status}`);\r\n    });\r\n  }\r\n\r\n  // метод, который отправляет запрос на сервер для загрузки карточек\r\n  getCards() {\r\n    return fetch(`${this._address}/v1/${this._groupID}/cards`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if(response.ok) {\r\n         return response.json();\r\n       }\r\n        return Promise.reject(`Ощибка ${response.status}`);\r\n      });\r\n  }\r\n\r\n  // метод, который отправляет запрос на сервер для редактирования данных профиля\r\n  editUser(data) {\r\n    return fetch(`${this._address}/v1/${this._groupID}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n      .then((response) => {\r\n       if(response.ok) {\r\n         return response.json();\r\n       }\r\n        return Promise.reject(`Ощибка ${response.status}`);\r\n      });\r\n  }\r\n\r\n  // метод добавления карточки на сервер\r\n  addCard(data) {\r\n    return fetch(`${this._address}/v1/${this._groupID}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n      .then((response) => {\r\n        if(response.ok) {\r\n          return response.json();\r\n       }\r\n       return Promise.reject(`Ощибка ${response.status}`);\r\n      });\r\n  }\r\n\r\n  // метод удаления карточки\r\n  removeCard(id) {\r\n    return fetch(`${this._address}/v1/${this._groupID}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n          authorization: this._token\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if(response.ok) {\r\n          return Promise.resolve('success');\r\n        }\r\n        return Promise.reject(`Ощибка ${response.status}`);\r\n      })\r\n\r\n  } \r\n\r\n  addLikeCard(id) {\r\n    return fetch(`${this._address}/v1/${this._groupID}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if(response.ok) {\r\n          return response.json();\r\n       }\r\n       return Promise.reject(`Ощибка ${response.status}`);\r\n    });\r\n  }\r\n\r\n  removeLikeCard(id) {\r\n    return fetch(`${this._address}/v1/${this._groupID}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if(response.ok) {\r\n          return response.json();\r\n       }\r\n       return Promise.reject(`Ощибка ${response.status}`);\r\n    });\r\n  }\r\n\r\n  editAvatar({avatar}) { \r\n    return fetch(`${this._address}/v1/${this._groupID}/users/me/avatar`, { \r\n      method: 'PATCH', \r\n      headers: { \r\n        authorization: this._token, \r\n        'Content-type': 'application/json' \r\n      }, \r\n      body: JSON.stringify({ \r\n        avatar: avatar, \r\n      }) \r\n    }) \r\n      .then((response) => {  \r\n        if(response.ok) {  \r\n          return response.json();  \r\n       }  \r\n       return Promise.reject(`Ощибка ${response.status}`);  \r\n      });  \r\n  } \r\n \r\n\r\n}\r\n\r\nconst api = new Api({\r\n  address: 'https://mesto.nomoreparties.co',\r\n  token: '6db4154b-d992-4850-8211-1b620ba1fb44',\r\n  groupID: 'cohort-22'\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { CardsContext } from '../contexts/CardsContext';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport api from '../utils/api';\r\n\r\n \r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [currentCard, setCurrentCard] = React.useState({});\r\n\r\n  const [cards, setCards] = React.useState([]); \r\n  \r\n  React.useEffect(() => { \r\n    api.getCards() \r\n    // если ответ сервера положительный, в стейт приходит массив карточек \r\n    // каждый объект карточки из данного массива имеет следующие поля: _id, name, link, likes \r\n      .then(res => {\r\n        setCards(res);\r\n      }) \r\n      .catch(err => console.log(err)) \r\n  }, []); \r\n\r\n  // функция лайка и дизлайка карточки\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    if (!isLiked) {\r\n      // Отправляем запрос в API и получаем обновлённые данные карточки\r\n      api.addLikeCard(card._id, !isLiked)\r\n        .then((newCard) => {\r\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n            api.removeLikeCard(card._id, isLiked)\r\n              .then((newCard) => {\r\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n              })\r\n              .catch(err => console.log(err))\r\n           }\r\n  } \r\n\r\n  // функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.removeCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  \r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  } \r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  }\r\n\r\n  // эффект при монтировании компонента\r\n  // формирует api запрос для получения данных пользователя при загрузке страницы\r\n  React.useEffect(() => {\r\n    api.getUsers()\r\n      .then(user => {\r\n        setCurrentUser(user);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  // Обработчик api запроса для обновления профильных данных\r\n  function handleUpdateUser({ name, about }) {\r\n    api.editUser({ name, about })\r\n      .then(userData => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n  } \r\n\r\n  // Обработчик api запроса для обновления аватара\r\n  function handleUpdateAvatar({avatar}) {\r\n    api.editAvatar({avatar})\r\n      .then((userData) => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n        })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  // Обработчик api запроса для создания новой карточки\r\n  function handleAddPlaceSubmit({ name, link }) {\r\n    api.addCard({ name, link })\r\n      .then(newCard => {\r\n        setCurrentCard(newCard);\r\n        setCards([...cards, newCard]); \r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n  <CurrentUserContext.Provider value={currentUser}>\r\n    <CardsContext.Provider value={currentCard}>\r\n    <div className=\"page\">\r\n      <div className=\"root\">\r\n        <Header />\r\n        <Main  \r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n          onEditProfile={handleEditProfileClick} \r\n          onAddPlace={handleAddPlaceClick} \r\n          onEditAvatar={handleEditAvatarClick} \r\n          onCardClick={handleCardClick}/>\r\n        \r\n        <Footer />\r\n\r\n        <EditProfilePopup onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}/>\r\n         \r\n        <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}/>\r\n         \r\n        <AddPlacePopup onAddPlace={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\r\n\r\n        <PopupWithForm title=\"Вы уверены ?\" name=\"removecard\" nameButton=\"Да\" />\r\n           \r\n        <ImagePopup \r\n          isOpen={isImagePopupOpen}\r\n          card={selectedCard} \r\n          onClose={closeAllPopups}\r\n          link={selectedCard.link}\r\n          name={selectedCard.name} />\r\n      </div>\r\n    </div>\r\n   </CardsContext.Provider>\r\n  </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}